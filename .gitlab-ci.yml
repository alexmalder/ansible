---
stages:
  - lint
  - test
  - kube

ansiblelint:
  stage: lint
  image: alpine:3.17
  script:
    - apk add git ansible ansible-lint
    - ansible-galaxy collection install ansible.posix
    - ansible-galaxy collection install community.general
    - ansible-lint *.yml
  tags:
    - dind
  only:
    - master

markdownlint:
  stage: lint
  image: alpine:3.17
  script:
    - apk add npm
    - npm i -g markdownlint-cli
    - find . | grep "\.md" | xargs -I % sh -c "markdownlint %"
  tags:
    - dind
  only:
    - master

ansible-playbook:
  stage: test
  image: alpine:3.17
  script:
    - apk add ansible
    - ansible-playbook init.yml
  tags:
    - dind
  when: manual
  only:
    - master

kube-prometheus-stack:
  stage: kube
  image: dtzar/helm-kubectl
  script:
    - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    - helm repo update
    - helm search repo prometheus-community/kube-prometheus-stack
    - helm upgrade 
      --kube-apiserver $K8S_SERVER 
      --kube-token $K8S_TOKEN 
      --kube-insecure-skip-tls-verify 
      --install 
      --namespace $NAMESPACE
      --create-namespace 
      kube-prometheus-stack prometheus-community/kube-prometheus-stack
      --set prometheus.ingress.enabled=true
      --set prometheus.ingress.ingressClassName=nginx
      --set prometheus.ingress.hosts[0]=prometheus.vnmntn.com
      --set alertmanager.ingress.enabled=true
      --set alertmanager.ingress.ingressClassName=nginx
      --set alertmanager.ingress.hosts[0]=alertmanager.vnmntn.com
      --set grafana.ingress.enabled=true
      --set grafana.ingress.ingressClassName=nginx
      --set grafana.ingress.hosts[0]=grafana.vnmntn.com
      -f ./services/kube-prometheus-stack/values.yaml
  tags:
    - dind
  when: manual
  only:
    - master

postgres-reader:
  stage: kube
  image: dtzar/helm-kubectl
  script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo update
    - helm search repo postgresql
    - helm upgrade 
      --kube-apiserver $K8S_SERVER 
      --kube-token $K8S_TOKEN 
      --kube-insecure-skip-tls-verify 
      --install 
      --namespace $NAMESPACE 
      --create-namespace 
      postgresql-reader bitnami/postgresql 
      --set auth.username=$PG_READER_USER 
      --set auth.password=$PG_READER_PASSWORD 
      --set auth.database=$PG_READER_DB
  tags:
    - dind
  when: manual
  only:
    - master
