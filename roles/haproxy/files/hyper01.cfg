global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           10m
    timeout connect         10s
    timeout client          10m
    timeout server          10m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend kube_ingress
    bind 10.10.10.1:80
    mode tcp
    default_backend             kube_ingress

backend kube_ingress
    mode tcp
    server  app1 192.168.122.12:30668
    server  app2 192.168.122.13:30668
    server  app3 192.168.122.14:30668

frontend kube_api
  bind 10.10.10.1:6443 ssl crt /etc/haproxy/certs/kubeapi.pem #verify none
  default_backend kube_api

backend kube_api
  balance source
  server m01 192.168.122.12:6443
  server m02 192.168.122.13:6443
  server m03 192.168.122.14:6443

frontend drone_runner
    bind 10.10.10.1:10010
    mode tcp
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dst:%[var(sess.dst)] "
    tcp-request content set-var(sess.dst) ssl_fc_sni
    use_backend %[ssl_fc_sni]
    default_backend             drone_runner

frontend dns
    bind 10.10.10.1:10011
    mode tcp
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dst:%[var(sess.dst)] "
    tcp-request content set-var(sess.dst) ssl_fc_sni
    use_backend %[ssl_fc_sni]
    default_backend             dns

frontend node1
    bind 10.10.10.1:10012
    mode tcp
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dst:%[var(sess.dst)] "
    tcp-request content set-var(sess.dst) ssl_fc_sni
    use_backend %[ssl_fc_sni]
    default_backend             node1

frontend node2
    bind 10.10.10.1:10013
    mode tcp
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dst:%[var(sess.dst)] "
    tcp-request content set-var(sess.dst) ssl_fc_sni
    use_backend %[ssl_fc_sni]
    default_backend             node2

frontend node3
    bind 10.10.10.1:10014
    mode tcp
    log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dst:%[var(sess.dst)] "
    tcp-request content set-var(sess.dst) ssl_fc_sni
    use_backend %[ssl_fc_sni]
    default_backend             node3

backend drone_runner
    mode tcp
    server  app1 192.168.122.10:22

backend dns
    mode tcp
    server  app1 192.168.122.11:22

backend node1
    mode tcp
    server  app1 192.168.122.12:22

backend node2
    mode tcp
    server  app1 192.168.122.13:22

backend node3
    mode tcp
    server  app1 192.168.122.14:22
