global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM
    ssl-dh-param-file /etc/haproxy/dhparams.pem

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           10m
    timeout connect         10s
    timeout client          10m
    timeout server          10m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend default
    bind 0.0.0.0:80
    bind 0.0.0.0:443 ssl crt /etc/ssl/certs/vnmntn.com.pem
    redirect scheme https code 301 if !{ ssl_fc }
    mode http

    acl is_git hdr(host) -i git.vnmntn.com
    acl is_drone hdr(host) -i drone.vnmntn.com
    acl is_minio hdr(host) -i minio.vnmntn.com
    acl is_minio_api hdr(host) -i minio-api.vnmntn.com
    acl is_grafana hdr(host) -i grafana.vnmntn.com
    acl is_api hdr(host) -i api.vnmntn.com

    use_backend git if is_git
    use_backend drone if is_drone
    use_backend minio if is_minio
    use_backend minio_api if is_minio_api
    use_backend grafana if is_grafana
    use_backend api if is_api

    default_backend             kube_ingress

#frontend kube_api
#    bind            0.0.0.0:6443
#    mode            tcp
#    option          tcplog    
#    default_backend kube_api

backend git
    mode http
    server  app1 127.0.0.1:3030

backend drone
    mode http
    server  app1 127.0.0.1:8080

backend minio
    mode http
    server  app1 127.0.0.1:9001

backend minio_api
    mode http
    server  app1 127.0.0.1:9000

backend grafana
    mode http
    server  app1 127.0.0.1:3001

backend api
    mode http
    server  app1 127.0.0.1:9090

backend kube_ingress
    mode    http
    server  app1 192.168.122.10:32528 check
    server  app2 192.168.122.11:32528 check

#backend kube_api
#    mode tcp
#    option tcplog
#    option tcp-check
#    balance roundrobin
#    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
#    server m01 192.168.122.10:6443
#    server m02 192.168.122.11:6443
#    server m03 192.168.122.12:6443
