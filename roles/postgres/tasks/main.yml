---
# tasks file for postgres
- name: Install postgresql centos/almalinux
  community.general.apk:
    name:
      - postgresql14
      - py3-psycopg

- name: Init service
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: Setup pg hba
  ansible.builtin.template:
    src: "roles/postgres/templates/pg_hba.conf"
    dest: "/etc/postgresql/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0600'
  become: true

# - name: Setup logging
#   ansible.builtin.import_tasks: ./log.yml

- name: Setup service
  ansible.builtin.service:
    name: postgresql
    state: restarted
    enabled: true

# need database name
- name: Create database
  community.postgresql.postgresql_db:
    state: present
    name: "{{ item.name }}"
  with_items: "{{ hostvars['POSTGRES']['config']['databases'] }}"
  become: true
  become_user: postgres

# need username and password
- name: Create database user
  community.postgresql.postgresql_user:
    state: present
    name: "{{ item.user }}"
    password: "{{ item.password }}"
  with_items: "{{ hostvars['POSTGRES']['config']['users'] }}"
  become: true
  become_user: postgres

# need dbname and username
- name: Grant database user access to database
  community.postgresql.postgresql_privs:
    type: database
    database: "{{ item.database }}"
    roles: "{{ item.user }}"
    grant_option: false
    privs: all
  with_items: "{{ hostvars['POSTGRES']['config']['bind'] }}"
  become: true
  become_user: postgres

# setup listener
- name: Setup listen addresses
  ansible.builtin.replace:
    path: "~/data/postgresql.conf"
    regexp: '.*listen_add.*'
    replace: "listen_addresses = '{{ hostvars['POSTGRES']['config']['listen_addresses'] }}'"
  become: true
  become_user: postgres

- name: Setup service
  ansible.builtin.service:
    name: postgresql
    state: restarted
    enabled: true
