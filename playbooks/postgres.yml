---
- name: Install postgres 12
  hosts: atl
  become: true
  vars:
    db_user: atl
    db_password: atl
    db_name: atl
    listen_addresses: 127.0.0.1
    allowed_ips: all
  tasks:
    - name: Install a modularity appstream with defined stream and profile
      ansible.builtin.dnf:
        name: '@postgresql:12'
        state: present

    - name: Find out if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: Initialize PostgreSQL
      ansible.builtin.command: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: Setup service
      ansible.builtin.systemd:
        name: postgresql
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Install Python packages
      ansible.builtin.yum:
        name: python3-psycopg2
        state: present

    - name: Create database
      community.postgresql.postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: true
      become_user: postgres

    - name: Create database user
      community.postgresql.postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: true
      become_user: postgres

    - name: Grant database user access to database
      community.postgresql.postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: false
        privs: all
      become: true
      become_user: postgres

        #    - name: Allow md5 connection for the database user
        #      community.postgresql.postgresql_pg_hba:
        #        dest: "~/data/pg_hba.conf"
        #        contype: host
        #        users: "{{ db_user }}"
        #        source: "{{ allowed_ips }}"
        #        databases: "{{ db_name }}"
        #        method: md5
        #        create: true
        #      become: true
        #      become_user: postgres

    - name: Setup listen addresses
      ansible.builtin.replace:
        path: "~/data/postgresql.conf"
        regexp: '.*listen_add.*'
        replace: "listen_addresses = '{{ listen_addresses }}'"
      become: true
      become_user: postgres

    - name: Setup service
      ansible.builtin.systemd:
        name: postgresql
        state: restarted
        enabled: true
        daemon_reload: true
